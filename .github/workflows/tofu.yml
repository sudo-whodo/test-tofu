name: OpenTofu Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

# Required for AWS OIDC authentication
permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-west-2
  STATE_BUCKET: github-oidc-sudo-whodo-test-tofu-state

jobs:
  plan:
    name: OpenTofu Plan
    runs-on: [self-hosted, Linux]
    environment:
      name: plan

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: OpenTofu Format Check
        id: fmt
        run: tofu fmt -check -recursive
        continue-on-error: true

      - name: OpenTofu Init
        id: init
        run: |
          tofu init \
            -backend-config="bucket=${{ env.STATE_BUCKET }}" \
            -backend-config="key=${{ github.repository }}/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="encrypt=true" \
            -backend-config="use_lockfile=true"

      - name: OpenTofu Validate
        id: validate
        run: tofu validate -no-color

      - name: OpenTofu Plan
        id: plan
        timeout-minutes: 5
        run: |
          tofu plan -input=false -no-color -out=tfplan || {
            echo "❌ Plan failed with exit code $?"
            exit 1
          }

      - name: Display Plan Summary
        if: success()
        run: |
          echo "✅ OpenTofu plan completed successfully!"
          echo "Review the plan output above to see what resources will be created."

      - name: Upload Plan Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ github.run_number }}-${{ github.run_attempt }}
          path: tfplan
          retention-days: 5

      - name: Cleanup Plan File
        if: always()
        run: rm -f tfplan

  apply:
    name: OpenTofu Apply
    runs-on: [self-hosted, Linux]
    needs: plan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && needs.plan.result == 'success'
    environment:
      name: plan-approved
      url: https://github.com/${{ github.repository }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{ github.run_number }}-${{ github.run_attempt }}

      - name: OpenTofu Init
        id: init
        run: |
          tofu init \
            -backend-config="bucket=${{ env.STATE_BUCKET }}" \
            -backend-config="key=${{ github.repository }}/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="encrypt=true" \
            -backend-config="use_lockfile=true"

      - name: OpenTofu Apply
        id: apply
        timeout-minutes: 10
        run: |
          tofu apply -auto-approve -input=false -no-color tfplan || {
            echo "❌ Apply failed with exit code $?"
            exit 1
          }

      - name: Display Apply Summary
        if: success()
        run: |
          echo "✅ OpenTofu apply completed successfully!"
          echo "Infrastructure has been deployed."

      - name: Cleanup Plan File
        if: always()
        run: rm -f tfplan
